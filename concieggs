#!/bin/bash

set -e
set -f
trap 'killall concieggs' EXIT # Kill all children when we quit.

dir=$(dirname $(readlink -f $0))

cfg=$dir/concieggs.conf
. $cfg
cmddir=$dir/cmds/

export CONCIEGGS_DIR=$dir
export CONCIEGGS_DB_DIR=$dir/db
export CONCIEGGS_LIB_DIR=$dir/eggspi
export EGGS_DIR=$dir/..
export EGGS_LIB_DIR=$EGGS_DIR/eggslib
export EGGS_DAEMON_SOCKET=$CONCIEGGS_DIR/eggsmld.socket
export CONCIEGGS_IRC_DIR=$irc_dir/irc.freenode.net
export CONCIEGGS_NAME=$irc_username

echo "Using channel in $irc_dir/irc.freenode.net/$irc_channel"
cd $CONCIEGGS_IRC_DIR

# Let all eggsml users touch our stuff.
umask 002

# Import the concieggs library.
export PATH=$CONCIEGGS_LIB_DIR:$PATH

# Right on - read commands and be merry.

dateregex='[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}'
awk_getuser='{ print substr($3, 2, length($3)-2); }'
awk_checkpart='/'$dateregex' -!- .* has left .*/ { print substr($4, 0, index($4, "(")-1)}'
awk_checkjoin='/'$dateregex' -!- .* has joined .*/ { print substr($4, 0, index($4, "(")-1)}'

throttle() {
    awk '{print; fflush(); system("sleep 1")}'
}

run_hooks() {
    hooks=$1
    ls "$CONCIEGGS_DIR/hooks/$hooks/" | while read -r f; do
        hook=$CONCIEGGS_DIR/hooks/$hooks/$f
        if [ -x "$hook" ]; then
            "$hook" || true
        fi
    done
}

# This process is run in every directory containing a conversation.
reader() {
    trap 'rm -f watched' EXIT
    if (basename "$(pwd)" | grep -E '^#') > /dev/null; then
        hooktype='channel_message'
    else
        hooktype='private_message'
    fi
    while read -r line; do
        touch watched
        export EGGS_LINE="$line"
        export EGGS_WHEN="$(echo "$EGGS_LINE" | awk --posix '/'"$dateregex"'/ { print $1, $2 }')"
        if (echo "$EGGS_LINE" | grep -E "$dateregex <[^>]*> ") > /dev/null; then
            export EGGS_BODY="$(echo "$EGGS_LINE"|sed -r "s/^[^>]*> //")"
            export EGGS_USER="$(echo "$EGGS_LINE"|awk --posix "$awk_getuser"|sed 's/_*$//')"
            if [ "$EGGS_USER" != "$CONCIEGGS_NAME" ]; then
                run_hooks "$hooktype"
            fi
        else
            export EGGS_USER="$(echo "$line"|awk --posix "$awk_checkpart")"

            if [ "$EGGS_USER" ]; then
                run_hooks 'channel_part'
            else
                export EGGS_USER="$(echo "$line"|awk --posix "$awk_checkjoin")"
                if [ "$EGGS_USER" ]; then
                    run_hooks 'channel_join'
                fi
            fi
        fi
    done | while read -r line; do
        echo "$line" | fmt -s --width=400
    done | throttle
}

# Write all errors here

tmpdir=$(mktemp -d) || exit 1
mkfifo $tmpdir/stderr
(cat $tmpdir/stderr | throttle > $irc_error_channel/in) &
exec 2>$tmpdir/stderr
rm $tmpdir/stderr
rmdir $tmpdir

ls $CONCIEGGS_IRC_DIR | while read -r dir; do
    dir="$(basename "$dir")"
    if [ -d "$dir" ] && [ "$dir" != "nickserv" ]; then
        touch "$dir/watched"
        (cd "$dir"; touch out; (tail -f -n 0 out | reader > in)) &
    fi
done

echo "$irc_greeting" > $irc_channel/in

inotifywait -e create --monitor --format %w%f . \
    | while read -r dir; do
    echo inotify "$dir"
    dir="$(basename "$dir")"
    if [ -d "$dir" ] && ! [ -r "$dir/watched" ] && [ "$dir" != "nickserv" ]; then
        touch "$dir/watched"
        (cd "$dir"; touch out; (tail -f -n 10 out | reader > in)) &
    fi
done
